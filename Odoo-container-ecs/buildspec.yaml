version: 0.2

env:
  secrets-manager:
    DB_HOST: "$SECRET_NAME:host"
    DB_USERNAME: "$SECRET_NAME:username"
    DB_PASSWORD: "$SECRET_NAME:password"
    DB_PORT: "$SECRET_NAME:port"

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing Python version 3.9 ..."
      - pyenv global $PYTHON_39_VERSION
      - pip install --upgrade pip
      - pip install -r requirements.txt
     
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - export DB_HOST
      - export DB_USERNAME
      - export DB_PASSWORD
      - export DB_PORT
      - chmod +x entrypoint.sh
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=844045035952.dkr.ecr.us-east-1.amazonaws.com/odoo17-image-g3
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo $IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - echo $REPOSITORY_URI:latest
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"odoo","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      
artifacts:
    files:
      - imagedefinitions.json
      - 'addons/*'
      - '**/*'
